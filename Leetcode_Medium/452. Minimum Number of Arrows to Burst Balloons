// 452. Minimum Number of Arrows to Burst Balloons
//**************************************************************************


class Solution {
public:
    int findMinArrowShots(vector<vector<int>>& points) {
        
        sort(points.begin(),points.end());
       
       
        // int n=points.size();
        int i=0;
        int count=0;
       // while(i<points.size())
        {
            int j=i+1;
             vector<vector<int>> v;
             v.push_back(points[i]);
            while(j<points.size())
            {
               if(points[j][0]>=points[i][0] && points[j][0]<=points[i][1])
                {
                    // We can push but need to check one more condition
                    bool flag=false;
                    for(int k=0;k<v.size();k++)
                    {
                        if(points[j][0]>=v[k][0] && points[j][0]<=v[k][1])
                        {
                            flag=true;
                        }
                        else 
                        {
                            flag=false;
                            break;
                        }
                    }
                    if(flag==true)   // || v.empty())
                    {
                        v.push_back(points[j]);
                    }
                    else
                    {
                        v.clear();
                        v.push_back(points[j]);
                        i=j;
                        j=i;
                        count++;
                        //break;
                    }
                }
                else
                {
                    v.clear();
                    v.push_back(points[j]);

                    count++;
                    i=j;
                    j=i;
                    //break;
                }
                j++;
            }
        }

        return count+1;
    }
};

