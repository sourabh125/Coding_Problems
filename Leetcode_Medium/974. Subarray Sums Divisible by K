



class Solution {
public:
    vector<vector<int>> solve_bruteforce(vector<int>& nums){
        int n=nums.size();
        vector<vector<int>> ans;
        set<vector<int>> st;
        for(int i=0;i<n-2;i++){
            for(int j=i+1;j<n-1;j++){
                for(int k=j+1;k<n;k++){
                    int sum=nums[i]+nums[j]+nums[k];
                    
                    if(sum==0){
                        vector<int> temp;
                        temp.push_back(nums[i]);
                        temp.push_back(nums[j]);
                        temp.push_back(nums[k]);
                        sort(temp.begin(),temp.end());
                        st.insert(temp);
                    }
                }
            }
        }
        for(auto i:st){
            ans.push_back(i);
        }
        return ans;
    }

    vector<vector<int>> solve_using_2pointer(vector<int>& nums){
        sort(nums.begin(),nums.end());
        set<vector<int>> st;
        int n=nums.size();
        vector<vector<int>> ans;
        for(int i=0;i<n;i++){
            int start=i+1;
            int end=n-1;
            while(start<end){
                int sum=nums[i]+nums[start]+nums[end];
                if(sum==0){
                    st.insert({nums[i],nums[start],nums[end]});
                    start+=1;
                    end-=1;
                }
                else if(sum>0){
                    end=end-1;
                }
                else start=start+1;
            }
        }
        for(auto i:st){
            ans.push_back(i);
        }
        return ans;
    }
    vector<vector<int>> threeSum(vector<int>& nums) {
        
        if(nums.size()<3){
            return {{}};
        }
        // return solve_bruteforce(nums);

        return solve_using_2pointer(nums);
    }
};
