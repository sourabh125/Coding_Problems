/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */


//--------------------------------------------------(Solution-1)----------------------------------------------------


class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        //find size of the list   -->> size-n ->from starting
        ListNode* temp=head;
        if(head==NULL) return head;
        int size=0;
        while(temp!=NULL){
            size++;
            temp=temp->next;
        }
        int pos=size-n;
        if(pos==0) return head->next; 
        temp=head;
        while(pos-- > 1){
            temp=temp->next;  
        }
        ListNode* temp2=temp->next;
        temp->next=temp2->next; 
        return head;
    }
};


//--------------------------------------------------(Solution-2)----------------------------------------------------


class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* list1=head;
        ListNode* list2=head;
        for(int i=0;i<n;i++){
            fast=fast->next;
        }
        if(fast==NULL) return head->next;
        while(fast!=NULL){
            slow=slow->next;
            fast=fast->next;
        }
        slow->next=slow->next->next;
        return head;
    }
};

