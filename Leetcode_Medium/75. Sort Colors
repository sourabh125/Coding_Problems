

// Solution 1: (brute Force) O(N*N);

class Solution {
public:
    void sortColors(vector<int>& nums) {
        
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            for(int j=i;j<n;j++)
            {
                if(nums[i]>nums[j])
                {
                    int temp=nums[j];
                    nums[j]=nums[i];
                    nums[i]=temp;
                }
            }
        }
    }
};


// ------------------------------------------ Optimized approach O(N) by 2 pointer -----------------------------------------

class Solution {
public:
    void sortColors(vector<int>& nums) {
        
        int start=0;
        int mid=0;
        int end=nums.size()-1;
        
        while(mid<=end)
        {
            if(nums[mid]==0)
            {
                swap(nums[mid],nums[start]);
                start++;
                mid++;
            }
            else if(nums[mid]==1)
            {
                mid++;
            }
            else
            {
                swap(nums[mid],nums[end]);
                end--;
            }
        }
        
    }
};
