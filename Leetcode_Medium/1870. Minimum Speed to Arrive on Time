



class Solution {
public:
    bool isPossible(vector<int>& dist, int speed, double hour)
    {
        double ans=0;
        for(int i=0;i<dist.size();i++)
        {
            double d=(double)(dist[i]*1.0)/speed;
            if(i!=dist.size()-1)
            {
                ans=ans+ceil(d);
            }
            else
            {
                ans+=d;
            }
            if(ans>hour)
            {
                return false;
            }
        }
        if(ans<=hour)
            return true;
        return false;

    }
    int minSpeedOnTime(vector<int>& dist, double hour) {

      // Using binary search 
      int i=0;
      int j=1e7;
      int minSpeed=-1;

        while(i<=j)
        {
            int mid=(i+j)/2;
            if(isPossible(dist,mid,hour))
            {
                minSpeed=mid;
                j=mid-1;
            }
            else{
                i=mid+1;
            }
                
        }
        return minSpeed;
    }
};
