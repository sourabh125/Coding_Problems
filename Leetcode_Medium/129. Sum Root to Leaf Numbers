


/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> v;

    void solve(TreeNode* root,string str)
    {
        if(root->left==NULL && root->right==NULL)
        {
            str+=(root->val + '0');      // convert last node value integer to char and add into string 
            v.push_back(str);
            str="";
            return;
        }
        // convert integer to char and add into string 
        str+=(root->val + '0');
        if(root->left!=NULL)
        {
            solve(root->left,str);
        }
        if(root->right!=NULL)
        {
            solve(root->right,str);
        }

    }
    int sumNumbers(TreeNode* root) {
        
        string str="";
        int sum=0;
        solve(root,str);

        for(int i=0;i<v.size();i++)
        {
            int tempsum=0;
            for(int j=0;j<v[i].size();j++)
            {
                tempsum=tempsum*10+(v[i][j]-'0');
            }
            sum+=tempsum;
        }
        return sum;
    }
};
