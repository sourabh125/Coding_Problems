



class Solution {
public:
    char solve_using_N(string s,string t)
    {
        int sn=s.size();
        vector<int> v(26,0);
        for(int i=0;i<sn;i++)
        {
            v[s[i]-'a']++;
            v[t[i]-'a']++;
        }
        v[t[sn]-'a']++;

        for(int i=0;i<26;i++)
        {
            if(v[i]%2==1) return i+'a';
        }
        return ' ';
    }
    char solve_using_single_map(string s, string t)
    {
        int sn=s.size();
        map<char,int> mp;
        for(int i=0;i<sn;i++)
        {
            mp[s[i]]++;
            mp[t[i]]++;
        }
        mp[t[sn]]++;

        for(auto i:mp)
        {
            if(i.second%2==1) return i.first;
        }
        return ' ';
    }

    char solve_using_map(string s,string t)
    {
        map<char,int> mp1;
        map<char,int> mp2;
        int sn=s.size();
        int tn=t.size();
        for(int i=0;i<sn;i++)
        {
            mp1[s[i]]++;
            mp2[t[i]]++;
        }
        mp2[t[sn]]++;


        for(auto i:mp2)
        {
            if(mp2[i.first]!=mp1[i.first]) return i.first;
        }
        return ' ';
    }

    char solve_efficient(string s,string t)
    {
        int sSum=0,tSum=0;
        int sn=s.size();
        for(int i=0;i<sn;i++)
        {
            sSum+=s[i];
            tSum+=t[i];
        }
        tSum+=t[sn];

        return char(tSum-sSum);
    }
    char findTheDifference(string s, string t) {
        
        // return solve_using_N(s,t);

        // return solve_using_map(s,t);

        // return solve_using_single_map(s,t);

        return solve_efficient(s,t);
    }
};
