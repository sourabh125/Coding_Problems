class Solution {
public:

    bool solve_bf(string s){
        int n=s.size();
        int count1=0;
        int count2=0;
        for(int i=0;i<n/2;i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')
                count1++;
        }
        for(int i=n/2;i<n;i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U')
                count2++;
        }


        if(count1==count2) return true;
        return false;
    }

    bool solve_optimized1(string s){
        int n=s.size();
        int count1=0,count2=0;
        for(int i=0;i<n;i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'){
                if(i<n/2) count1++;
                else count2++;
            }
        }
        if(count1==count2) return true;
        return false;
    }

    bool solve_optimized2(string s){
        int n=s.size();
        int count=0;
        for(int i=0;i<n;i++){
            if(s[i]=='a' || s[i]=='e' || s[i]=='i' || s[i]=='o' || s[i]=='u' || s[i]=='A' || s[i]=='E' || s[i]=='I' || s[i]=='O' || s[i]=='U'){
                if(i<n/2) count++;
                else count--;
            }
        }
        if(count==0) return true;
        return false;
    }
    bool halvesAreAlike(string s) {
        
        // return solve_bf(s);
        return solve_optimized1(s);
        // return solve_optimized2(s);

    }
};
