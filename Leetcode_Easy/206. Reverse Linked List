/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* solve1_iteration(ListNode* head){
        
        ListNode* curr=head;
        ListNode* prev=NULL;
        while(head!=NULL){
            head=head->next;
            curr->next=prev;
            prev=curr;
            curr=head;
        }
        return prev;
    }
    ListNode* solve2_iteration_space(ListNode* head){
        ListNode* ans=NULL;
        while(head!=NULL){
            ListNode* temp=new ListNode(head->val);
            if(!ans){
                ans=temp;
            }
            else {
                temp->next=ans;
                ans=temp;
            }
            head=head->next;
        }
        return ans;
    }
    ListNode* reverseList(ListNode* head) {
        
        return solve1_iteration(head);
        
        // return solve2_iteration_space(head);
    }
};
