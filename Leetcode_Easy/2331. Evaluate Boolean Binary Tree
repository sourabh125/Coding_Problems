/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool solve1(TreeNode* root){
        if(root==NULL) return false;
        if(root->val==0 || root->val==1) return root->val;
        if(root->left==NULL && root->right==NULL){
            return root->val;
        }
        evaluateTree(root->left);
        evaluateTree(root->right);
        if(root->val==3){
            root->val=root->left->val & root->right->val;
        }
        else if(root->val==2){
            root->val = root->left->val | root->right->val;
        }

        return root->val;
    }

    bool solve2(TreeNode* root){

        if(root->left==NULL && root->right==NULL){
            if(root->val==0) return false;
            return true;
        }

        bool left=solve2(root->left);
        bool right=solve2(root->right);

        if(root->val==2) return left || right;
        return left && right;

    }
    bool evaluateTree(TreeNode* root) {
        

        // return solve1(root);

        return solve2(root);
    }
};
