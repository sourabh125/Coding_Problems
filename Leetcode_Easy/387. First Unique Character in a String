



class Solution {
public:
    int solve_using_map(string s){
        int n=s.size();
        map<char,int> mp;
        for(char a:s){
            mp[a]++;
        }
        for(int i=0;i<n;i++){
            if(mp[s[i]]==1){
                return i;
            }
        }
        return -1;
    }
    int solve_using_loop_vector(string s){
        int n=s.size();
        vector<int> v(26,0);
        for(int i=0;i<n;i++){
             v[s[i]-'a']++;
        }
        int count=0;
        for(int i=0;i<n;i++){
            if(v[s[i]-'a']==1) return i;
        }
        return -1;
    }


    int solve_using_nestedLoop(string s){
        int n=s.size();
        for(int i=0;i<n;i++){
            int count=0;
            for(int j=0;j<n;j++){
                if(s[i]==s[j]) count++;
            }
            if(count==1) return i;
        }
        return -1;
    }
    int firstUniqChar(string s) {
        
        // return solve_using_map(s);
        // return solve_using_loop_vector(s);
        // return solve_using_nestedLoop(s);
       
    }
};
