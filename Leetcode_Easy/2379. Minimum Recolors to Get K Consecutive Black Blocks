// Time complexity O(N)

class Solution {
public:
    int minimumRecolors(string blocks, int k) {
        
        int minicount=INT_MAX;
        int count=0;
        for(int i=0;i<blocks.size();i++)
        {
            if(i<k)
            {
                if(blocks[i]=='W')
                {
                    count++;
                }   
            }
            else 
            {
                 if(i==k)
                {
                    minicount=count;
                }
                if(blocks[i]=='B' && blocks[i-k]=='W')
                {
                    count--;
                }
                else if(blocks[i]=='W' && blocks[i-k]=='B')
                {
                    count++;
                }
                if(count<minicount)
                {
                    minicount=count;
                }
            }
        }
        if(count<minicount)
        {
            return count;
        }
        return minicount;
    }
};



//---------------------------------------------------------------------------------


// Time complexity O(N*K)

class Solution {
public:
    int minimumRecolors(string blocks, int k) {
        
        int mini=INT_MAX;
        for(int i=0;i<=blocks.size()-k;i++)
        {
            int count=0;
            for(int j=i;j<i+k;j++)
            {
                if(blocks[j]=='W')
                {
                    count++;
                }
            }
            if(mini>count)
            {
                mini=count;
            }
        }
        return mini;
    }
};
